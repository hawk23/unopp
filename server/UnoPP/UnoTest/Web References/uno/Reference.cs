//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace UnoTest.uno {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="UnoPPSoap", Namespace="http://tempuri.org/")]
    public partial class UnoPP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ListGamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback JoinGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback StartGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback DestroyGameOperationCompleted;
        
        private System.Threading.SendOrPostCallback PlayCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetActivePlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardFromDeckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCardFromOpenStapleOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public UnoPP() {
            this.Url = global::UnoTest.Properties.Settings.Default.UnoTest_uno_UnoPP;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ListGamesCompletedEventHandler ListGamesCompleted;
        
        /// <remarks/>
        public event CreatePlayerCompletedEventHandler CreatePlayerCompleted;
        
        /// <remarks/>
        public event CreateGameCompletedEventHandler CreateGameCompleted;
        
        /// <remarks/>
        public event JoinGameCompletedEventHandler JoinGameCompleted;
        
        /// <remarks/>
        public event GetGameCompletedEventHandler GetGameCompleted;
        
        /// <remarks/>
        public event StartGameCompletedEventHandler StartGameCompleted;
        
        /// <remarks/>
        public event DestroyGameCompletedEventHandler DestroyGameCompleted;
        
        /// <remarks/>
        public event PlayCardCompletedEventHandler PlayCardCompleted;
        
        /// <remarks/>
        public event SetActivePlayerCompletedEventHandler SetActivePlayerCompleted;
        
        /// <remarks/>
        public event GetCardFromDeckCompletedEventHandler GetCardFromDeckCompleted;
        
        /// <remarks/>
        public event GetCardFromOpenStapleCompletedEventHandler GetCardFromOpenStapleCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListGames", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Game[] ListGames(double x, double y, double maxdistance) {
            object[] results = this.Invoke("ListGames", new object[] {
                        x,
                        y,
                        maxdistance});
            return ((Game[])(results[0]));
        }
        
        /// <remarks/>
        public void ListGamesAsync(double x, double y, double maxdistance) {
            this.ListGamesAsync(x, y, maxdistance, null);
        }
        
        /// <remarks/>
        public void ListGamesAsync(double x, double y, double maxdistance, object userState) {
            if ((this.ListGamesOperationCompleted == null)) {
                this.ListGamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGamesOperationCompleted);
            }
            this.InvokeAsync("ListGames", new object[] {
                        x,
                        y,
                        maxdistance}, this.ListGamesOperationCompleted, userState);
        }
        
        private void OnListGamesOperationCompleted(object arg) {
            if ((this.ListGamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListGamesCompleted(this, new ListGamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatePlayer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Player CreatePlayer(string name, double latitude, double longitude) {
            object[] results = this.Invoke("CreatePlayer", new object[] {
                        name,
                        latitude,
                        longitude});
            return ((Player)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePlayerAsync(string name, double latitude, double longitude) {
            this.CreatePlayerAsync(name, latitude, longitude, null);
        }
        
        /// <remarks/>
        public void CreatePlayerAsync(string name, double latitude, double longitude, object userState) {
            if ((this.CreatePlayerOperationCompleted == null)) {
                this.CreatePlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePlayerOperationCompleted);
            }
            this.InvokeAsync("CreatePlayer", new object[] {
                        name,
                        latitude,
                        longitude}, this.CreatePlayerOperationCompleted, userState);
        }
        
        private void OnCreatePlayerOperationCompleted(object arg) {
            if ((this.CreatePlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePlayerCompleted(this, new CreatePlayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Game CreateGame(string gameName, string creatorName, double x, double y) {
            object[] results = this.Invoke("CreateGame", new object[] {
                        gameName,
                        creatorName,
                        x,
                        y});
            return ((Game)(results[0]));
        }
        
        /// <remarks/>
        public void CreateGameAsync(string gameName, string creatorName, double x, double y) {
            this.CreateGameAsync(gameName, creatorName, x, y, null);
        }
        
        /// <remarks/>
        public void CreateGameAsync(string gameName, string creatorName, double x, double y, object userState) {
            if ((this.CreateGameOperationCompleted == null)) {
                this.CreateGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGameOperationCompleted);
            }
            this.InvokeAsync("CreateGame", new object[] {
                        gameName,
                        creatorName,
                        x,
                        y}, this.CreateGameOperationCompleted, userState);
        }
        
        private void OnCreateGameOperationCompleted(object arg) {
            if ((this.CreateGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateGameCompleted(this, new CreateGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/JoinGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int JoinGame(int gameId, string playerName) {
            object[] results = this.Invoke("JoinGame", new object[] {
                        gameId,
                        playerName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void JoinGameAsync(int gameId, string playerName) {
            this.JoinGameAsync(gameId, playerName, null);
        }
        
        /// <remarks/>
        public void JoinGameAsync(int gameId, string playerName, object userState) {
            if ((this.JoinGameOperationCompleted == null)) {
                this.JoinGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnJoinGameOperationCompleted);
            }
            this.InvokeAsync("JoinGame", new object[] {
                        gameId,
                        playerName}, this.JoinGameOperationCompleted, userState);
        }
        
        private void OnJoinGameOperationCompleted(object arg) {
            if ((this.JoinGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.JoinGameCompleted(this, new JoinGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Game GetGame(int gameId) {
            object[] results = this.Invoke("GetGame", new object[] {
                        gameId});
            return ((Game)(results[0]));
        }
        
        /// <remarks/>
        public void GetGameAsync(int gameId) {
            this.GetGameAsync(gameId, null);
        }
        
        /// <remarks/>
        public void GetGameAsync(int gameId, object userState) {
            if ((this.GetGameOperationCompleted == null)) {
                this.GetGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGameOperationCompleted);
            }
            this.InvokeAsync("GetGame", new object[] {
                        gameId}, this.GetGameOperationCompleted, userState);
        }
        
        private void OnGetGameOperationCompleted(object arg) {
            if ((this.GetGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGameCompleted(this, new GetGameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/StartGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void StartGame(int gameId) {
            this.Invoke("StartGame", new object[] {
                        gameId});
        }
        
        /// <remarks/>
        public void StartGameAsync(int gameId) {
            this.StartGameAsync(gameId, null);
        }
        
        /// <remarks/>
        public void StartGameAsync(int gameId, object userState) {
            if ((this.StartGameOperationCompleted == null)) {
                this.StartGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStartGameOperationCompleted);
            }
            this.InvokeAsync("StartGame", new object[] {
                        gameId}, this.StartGameOperationCompleted, userState);
        }
        
        private void OnStartGameOperationCompleted(object arg) {
            if ((this.StartGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StartGameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DestroyGame", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DestroyGame(int gameId) {
            this.Invoke("DestroyGame", new object[] {
                        gameId});
        }
        
        /// <remarks/>
        public void DestroyGameAsync(int gameId) {
            this.DestroyGameAsync(gameId, null);
        }
        
        /// <remarks/>
        public void DestroyGameAsync(int gameId, object userState) {
            if ((this.DestroyGameOperationCompleted == null)) {
                this.DestroyGameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDestroyGameOperationCompleted);
            }
            this.InvokeAsync("DestroyGame", new object[] {
                        gameId}, this.DestroyGameOperationCompleted, userState);
        }
        
        private void OnDestroyGameOperationCompleted(object arg) {
            if ((this.DestroyGameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DestroyGameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PlayCard", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int PlayCard(int gameId, int playerId, string card, bool uno) {
            object[] results = this.Invoke("PlayCard", new object[] {
                        gameId,
                        playerId,
                        card,
                        uno});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PlayCardAsync(int gameId, int playerId, string card, bool uno) {
            this.PlayCardAsync(gameId, playerId, card, uno, null);
        }
        
        /// <remarks/>
        public void PlayCardAsync(int gameId, int playerId, string card, bool uno, object userState) {
            if ((this.PlayCardOperationCompleted == null)) {
                this.PlayCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPlayCardOperationCompleted);
            }
            this.InvokeAsync("PlayCard", new object[] {
                        gameId,
                        playerId,
                        card,
                        uno}, this.PlayCardOperationCompleted, userState);
        }
        
        private void OnPlayCardOperationCompleted(object arg) {
            if ((this.PlayCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PlayCardCompleted(this, new PlayCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetActivePlayer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetActivePlayer(int gameId, int playerId) {
            object[] results = this.Invoke("SetActivePlayer", new object[] {
                        gameId,
                        playerId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetActivePlayerAsync(int gameId, int playerId) {
            this.SetActivePlayerAsync(gameId, playerId, null);
        }
        
        /// <remarks/>
        public void SetActivePlayerAsync(int gameId, int playerId, object userState) {
            if ((this.SetActivePlayerOperationCompleted == null)) {
                this.SetActivePlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetActivePlayerOperationCompleted);
            }
            this.InvokeAsync("SetActivePlayer", new object[] {
                        gameId,
                        playerId}, this.SetActivePlayerOperationCompleted, userState);
        }
        
        private void OnSetActivePlayerOperationCompleted(object arg) {
            if ((this.SetActivePlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetActivePlayerCompleted(this, new SetActivePlayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardFromDeck", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCardFromDeck(int gameId, int playerId) {
            object[] results = this.Invoke("GetCardFromDeck", new object[] {
                        gameId,
                        playerId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardFromDeckAsync(int gameId, int playerId) {
            this.GetCardFromDeckAsync(gameId, playerId, null);
        }
        
        /// <remarks/>
        public void GetCardFromDeckAsync(int gameId, int playerId, object userState) {
            if ((this.GetCardFromDeckOperationCompleted == null)) {
                this.GetCardFromDeckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardFromDeckOperationCompleted);
            }
            this.InvokeAsync("GetCardFromDeck", new object[] {
                        gameId,
                        playerId}, this.GetCardFromDeckOperationCompleted, userState);
        }
        
        private void OnGetCardFromDeckOperationCompleted(object arg) {
            if ((this.GetCardFromDeckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardFromDeckCompleted(this, new GetCardFromDeckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCardFromOpenStaple", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCardFromOpenStaple(int gameId, int playerId) {
            object[] results = this.Invoke("GetCardFromOpenStaple", new object[] {
                        gameId,
                        playerId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCardFromOpenStapleAsync(int gameId, int playerId) {
            this.GetCardFromOpenStapleAsync(gameId, playerId, null);
        }
        
        /// <remarks/>
        public void GetCardFromOpenStapleAsync(int gameId, int playerId, object userState) {
            if ((this.GetCardFromOpenStapleOperationCompleted == null)) {
                this.GetCardFromOpenStapleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCardFromOpenStapleOperationCompleted);
            }
            this.InvokeAsync("GetCardFromOpenStaple", new object[] {
                        gameId,
                        playerId}, this.GetCardFromOpenStapleOperationCompleted, userState);
        }
        
        private void OnGetCardFromOpenStapleOperationCompleted(object arg) {
            if ((this.GetCardFromOpenStapleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCardFromOpenStapleCompleted(this, new GetCardFromOpenStapleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Game {
        
        private int idField;
        
        private int versionField;
        
        private string nameField;
        
        private double locationXField;
        
        private double locationYField;
        
        private string[] playersField;
        
        private bool[] unoField;
        
        private string[] cardsField;
        
        private int activePlayerField;
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public double locationX {
            get {
                return this.locationXField;
            }
            set {
                this.locationXField = value;
            }
        }
        
        /// <remarks/>
        public double locationY {
            get {
                return this.locationYField;
            }
            set {
                this.locationYField = value;
            }
        }
        
        /// <remarks/>
        public string[] players {
            get {
                return this.playersField;
            }
            set {
                this.playersField = value;
            }
        }
        
        /// <remarks/>
        public bool[] uno {
            get {
                return this.unoField;
            }
            set {
                this.unoField = value;
            }
        }
        
        /// <remarks/>
        public string[] cards {
            get {
                return this.cardsField;
            }
            set {
                this.cardsField = value;
            }
        }
        
        /// <remarks/>
        public int activePlayer {
            get {
                return this.activePlayerField;
            }
            set {
                this.activePlayerField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Player {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void ListGamesCompletedEventHandler(object sender, ListGamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListGamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListGamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Game[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Game[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CreatePlayerCompletedEventHandler(object sender, CreatePlayerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Player Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Player)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CreateGameCompletedEventHandler(object sender, CreateGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Game Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Game)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void JoinGameCompletedEventHandler(object sender, JoinGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class JoinGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal JoinGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetGameCompletedEventHandler(object sender, GetGameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Game Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Game)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void StartGameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void DestroyGameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void PlayCardCompletedEventHandler(object sender, PlayCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PlayCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PlayCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void SetActivePlayerCompletedEventHandler(object sender, SetActivePlayerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetActivePlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetActivePlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCardFromDeckCompletedEventHandler(object sender, GetCardFromDeckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardFromDeckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardFromDeckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCardFromOpenStapleCompletedEventHandler(object sender, GetCardFromOpenStapleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCardFromOpenStapleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCardFromOpenStapleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591